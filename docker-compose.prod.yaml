version: "3"
services:
  nextjs:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    ports:
      - 3000:3000
    volumes:
      - ./client:/app
    restart: unless-stopped
    env_file: ./client/.env.local
#   strapi:
#     container_name: strapi
#     build:
#       context: ./strapi
#       dockerfile: Dockerfile
#     ports:
#       - 1337:1337
#     image: strapi:latest
#     restart: unless-stopped
#     env_file: ./strapi/.env
#     environment:
#       DATABASE_CLIENT: ${DATABASE_CLIENT}
#       DATABASE_HOST: strapiDB
#       DATABASE_PORT: ${DATABASE_PORT}
#       DATABASE_NAME: ${DATABASE_NAME}
#       DATABASE_USERNAME: ${DATABASE_USERNAME}
#       DATABASE_PASSWORD: ${DATABASE_PASSWORD}
#       JWT_SECRET: ${JWT_SECRET}
#       ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
#       APP_KEYS: ${APP_KEYS}
#       NODE_ENV: ${NODE_ENV}
#     volumes:
#       - ./client:/app
#       - ./strapi/config:/opt/app/config
#       - ./strapi/src:/opt/app/src
#       - ./strapi/package.json:/opt/package.json
#       - ./strapi/yarn.lock:/opt/yarn.lock
#       - ./strapi/.env:/opt/app/.env
#       - ./strapi/public/uploads:/opt/app/public/uploads
#     networks:
#       - strapi
#     depends_on:
#       - strapiDB

#   strapiDB:
#     container_name: strapiDB
#     platform: linux/amd64 #for platform error on Apple M1 chips
#     restart: unless-stopped
#     env_file: ./strapi/.env
#     image: postgres:12.0-alpine
#     environment:
#       POSTGRES_USER: ${DATABASE_USERNAME}
#       POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
#       POSTGRES_DB: ${DATABASE_NAME}
#     volumes:
#       - strapi-data:/var/lib/postgresql/data/ #using a volume
#       #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

#     ports:
#       - "5432:5432"
#     networks:
#       - strapi

# volumes:
#   strapi-data:

# networks:
#   strapi:
#     name: Strapi
#     driver: bridge
